div.quadrado{
    display: inline-block;
    border: 1px solid black;
    width: 300px;
    
    border-radius: 5px 5px;
    height: 300px;
}
---------------------------------------------------------------------------------------------------------------------------------------
div#q1 {
    background-image: linear-gradient(to right, skyblue, rgb(214, 108, 108)) ;
}

div#q2 {
    background-image: linear-gradient( to right, red, blue);
}

div#q3 {
   background-image: url('img/pattern001.png');
}
---------------------------------------------------------------------------------------------------------------------------------------
Exemplo a cima mostra a inclusão de "id" identificadores para div, e a inclusão de 
background-image: url("img/pattern001.png"), para determinar uma imagem como fundo da div.
background-repeat: (no-repeat, repeat, repeat-(x/y): utilizado para determinar repetições da imagens ou direção da repetição
background-size: 100px 100px; (Utilizado para definir o tamanho da img)
background-position: left center / center center / right center: determinar a posição, ancoragem da imagem dentro da div.  
background-size: auto / cover: Utilizado para manter o tamanho total do papel de parede, dentro da div  
background-attachment: fixed + background-size: cover = manter um papel de parede fixado e conforme a rolagem do usuário pelo site.
---------------------------------------------------------------------------------------------------------------------------------------
Shorthand - Background: 
  color > image > position > repeat > attachment 
Exemplo:
  body {
      background: black url('image/wallpaper002.jpg') center center no-repeat fixed
      background-size: cover
  {
(background-size não entra na shorthand, deve ser utilizado por fora.
---------------------------------------------------------------------------------------------------------------------------------------
Centralização Vertical: 
Exemplo CSS:
#container {
            background-image: url('img/target001.png');
            background-size: 100% 100%;
            position: relative;
            padding: 10px;
            background-color: yellowgreen;
            height: 96vh;
        }

        #conteudo{
            background-image: url('img/target001.png');
            background-size: 100% 100%;

            position: absolute;
            height: 200px;
            width: 400px;
            background-color: blueviolet;

            left: 50%;
            top: 50%;

            transform: translate(-50%, -50%);
        }
HTML: 
	<body>
    	     <section id="container">
               <article id="conteudo">

       		</article> 

    	     </section>
	</body>	
---------------------------------------------------------------------------------------------------------------------------------------
position: relative/absolute
relative: incluido em uma semântica como "section" já vem selecionado como padrão, mas relativo é o que contém uma div.
absolute: é o que está incluído dentro de um container, dessa forma podendo reposicionar de forma absoluta pela área 
já que a div está contida.
Caso a posição da div seja absolute, existe como alterar o top/left/right/bottom 
de forma pratica e posicionando para onde desejar. uma maneira prática de fazer é usar porcentagens dessa forma: 
left: 50%;
top: 50%;
- Dessa forma o elemento ele alinha 50% dele a esquerda da div section e 50% ao topo da div section ficando exatamente centralizado.
-
transform: translate(-50%, -50%);
- Dessa forma conseguimos mover ainda mais a article, dentro de uma lógica -50% -50% você consegue alinhar 
exatamente no centro utilizando valores negativos.